apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: asb-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.asb.example.com
    secretName: asb-tls-secret
  rules:
  - host: api.asb.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: asb-api
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: asb-n8n
  labels:
    app: asb
    component: n8n
spec:
  type: ClusterIP
  ports:
  - port: 5678
    targetPort: 5678
    protocol: TCP
    name: http
  selector:
    app: asb
    component: n8n
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: asb-n8n-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: n8n-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "N8n Admin Access"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - n8n.asb.example.com
    secretName: asb-n8n-tls-secret
  rules:
  - host: n8n.asb.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: asb-n8n
            port:
              number: 5678