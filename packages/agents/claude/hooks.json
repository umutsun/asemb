{
  "hooks": {
    "pre-commit": {
      "enabled": true,
      "commands": [
        {
          "name": "lint",
          "command": "npm run lint",
          "failOnError": true,
          "description": "Run ESLint to check code quality"
        },
        {
          "name": "typecheck",
          "command": "npm run typecheck",
          "failOnError": true,
          "description": "Run TypeScript type checking"
        },
        {
          "name": "format",
          "command": "npm run format:check",
          "failOnError": false,
          "description": "Check code formatting with Prettier"
        }
      ]
    },
    "post-edit": {
      "enabled": true,
      "commands": [
        {
          "name": "auto-import",
          "condition": "*.ts,*.tsx",
          "action": "organize-imports",
          "description": "Automatically organize imports in TypeScript files"
        }
      ]
    },
    "pre-build": {
      "enabled": true,
      "commands": [
        {
          "name": "clean",
          "command": "npm run clean",
          "description": "Clean build directories before building"
        },
        {
          "name": "validate-env",
          "command": "node scripts/validate-env.js",
          "failOnError": true,
          "description": "Validate environment variables"
        }
      ]
    },
    "post-install": {
      "enabled": true,
      "commands": [
        {
          "name": "setup-husky",
          "command": "npx husky install",
          "description": "Setup git hooks with Husky"
        },
        {
          "name": "generate-types",
          "command": "npm run generate:types",
          "description": "Generate TypeScript types from schemas"
        }
      ]
    }
  },
  "rules": {
    "file-naming": {
      "components": "PascalCase",
      "utilities": "camelCase",
      "constants": "UPPER_SNAKE_CASE",
      "tests": "*.test.ts,*.spec.ts"
    },
    "code-quality": {
      "max-file-lines": 500,
      "max-function-lines": 50,
      "max-complexity": 10,
      "no-console": "warn",
      "no-debugger": "error"
    },
    "security": {
      "no-hardcoded-secrets": true,
      "no-eval": true,
      "no-dangerouslySetInnerHTML": "warn"
    }
  },
  "notifications": {
    "success": {
      "display": true,
      "message": "✅ All checks passed!"
    },
    "failure": {
      "display": true,
      "message": "❌ Some checks failed. Please fix the issues before proceeding."
    }
  }
}