{
  "project": {
    "name": "alice-semantic-bridge",
    "version": "2.0.0",
    "description": "Advanced semantic search and RAG platform with n8n integration",
    "type": "n8n-extension",
    "language": "typescript",
    "repository": "https://github.com/alice/alice-semantic-bridge"
  },
  "gemini": {
    "profile": "advanced",
    "mode": "development",
    "ai_features": {
      "code_completion": true,
      "code_generation": true,
      "documentation": true,
      "testing": true,
      "debugging": true
    }
  },
  "mcp_integration": {
    "enabled": true,
    "primary_server": "asb-cli",
    "auto_connect": true,
    "reconnect_on_failure": true
  },
  "architecture": {
    "type": "microservices",
    "components": [
      {
        "name": "n8n-nodes",
        "type": "workflow",
        "path": "./nodes"
      },
      {
        "name": "api-server",
        "type": "rest",
        "path": "./api"
      },
      {
        "name": "dashboard",
        "type": "frontend",
        "path": "./dashboard"
      }
    ]
  },
  "integrations": {
    "n8n": {
      "enabled": true,
      "custom_nodes": 10,
      "workflows": 3
    },
    "postgresql": {
      "enabled": true,
      "extension": "pgvector",
      "vector_dimensions": 1536
    },
    "redis": {
      "enabled": true,
      "purpose": "caching",
      "pubsub": true
    },
    "openai": {
      "enabled": true,
      "models": {
        "embedding": "text-embedding-ada-002",
        "chat": "gpt-4"
      }
    }
  },
  "commands": {
    "quick": {
      "status": "asb_status",
      "search": "asb_search query=\"$1\"",
      "test": "asb_test type=all",
      "build": "asb_build action=build",
      "deploy": "asb_build action=deploy target=n8n"
    },
    "workflows": {
      "list": "asb_workflow action=list",
      "deploy": "asb_workflow action=deploy workflow_name=\"$1\"",
      "test": "asb_workflow action=test workflow_name=\"$1\""
    },
    "database": {
      "stats": "asb_database operation=stats",
      "init": "asb_database operation=init",
      "vacuum": "asb_database operation=vacuum"
    },
    "cache": {
      "flush": "asb_redis command=flush",
      "keys": "asb_redis command=keys pattern=\"*\"",
      "stats": "asb_redis command=info"
    }
  },
  "testing": {
    "framework": "jest",
    "coverage_threshold": 80,
    "test_patterns": ["**/*.test.ts", "**/*.spec.ts"],
    "commands": {
      "unit": "npm test",
      "integration": "npm run test:integration",
      "coverage": "npm run test:coverage"
    }
  },
  "deployment": {
    "targets": {
      "local": {
        "type": "local",
        "path": "~/.n8n/nodes"
      },
      "n8n": {
        "type": "docker",
        "image": "n8n-custom",
        "compose": "docker-compose.yml"
      },
      "production": {
        "type": "server",
        "host": "production.server.com",
        "deploy_script": "deploy-to-luwi.sh"
      }
    }
  },
  "documentation": {
    "readme": "README.md",
    "setup_guide": "ASB_MCP_SETUP.md",
    "api_docs": "docs/api.md",
    "architecture": "docs/ARCHITECTURE.md",
    "testing": "docs/TESTING.md"
  },
  "gemini_ai_prompts": {
    "code_review": "Review this code for best practices, security, and performance",
    "generate_test": "Generate comprehensive unit tests for this function",
    "document": "Generate detailed JSDoc documentation for this code",
    "optimize": "Optimize this code for better performance",
    "debug": "Help debug this issue with detailed analysis"
  }
}