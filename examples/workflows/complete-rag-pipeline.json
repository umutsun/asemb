{
  "name": "Complete RAG Pipeline with Alice Semantic Bridge",
  "nodes": [
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "scrapeMode": "auto",
        "options": {
          "extractMetadata": true,
          "removeScripts": true,
          "removeStyles": true
        }
      },
      "id": "web-scrape",
      "name": "Web Scrape Enhanced",
      "type": "n8n-nodes-alice-semantic-bridge.webScrapeEnhanced",
      "typeVersion": 1,
      "position": [250, 200]
    },
    {
      "parameters": {
        "operation": "loadAndSplit",
        "inputType": "filePath",
        "filePath": "={{ $json.filePath }}",
        "documentType": "auto",
        "splitterOptions": {
          "chunkSize": 1000,
          "chunkOverlap": 200,
          "addMetadata": true
        }
      },
      "id": "doc-processor",
      "name": "Document Processor",
      "type": "n8n-nodes-alice-semantic-bridge.documentProcessor",
      "typeVersion": 1,
      "position": [250, 350]
    },
    {
      "parameters": {
        "resource": "semantic",
        "operation": "upsert",
        "projectKey": "rag-pipeline",
        "sourceId": "={{ $json.metadata.sourceId || $json.url || 'document' }}",
        "content": "={{ $json.content }}",
        "chunkingStrategy": "auto",
        "additionalOptions": {
          "generateMetadata": true,
          "cacheResults": true
        }
      },
      "id": "semantic-upsert",
      "name": "Semantic Upsert",
      "type": "n8n-nodes-alice-semantic-bridge.aliceSemanticBridgeEnhanced",
      "typeVersion": 1,
      "position": [450, 275]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "search",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "webhook-search",
      "name": "Search Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [650, 200]
    },
    {
      "parameters": {
        "resource": "semantic",
        "operation": "search",
        "projectKey": "rag-pipeline",
        "query": "={{ $json.query }}",
        "searchMode": "hybrid",
        "additionalOptions": {
          "expandQuery": true,
          "limit": 5,
          "cacheResults": true
        }
      },
      "id": "semantic-search",
      "name": "Semantic Search",
      "type": "n8n-nodes-alice-semantic-bridge.aliceSemanticBridgeEnhanced",
      "typeVersion": 1,
      "position": [850, 200]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "message",
        "modelId": "gpt-4-turbo-preview",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are a helpful assistant. Use the following context to answer questions:\n\nContext:\n{{ $json.results.map(r => r.content).join('\n\n---\n\n') }}\n\nAnswer based on the context provided. If the answer is not in the context, say so."
            },
            {
              "role": "user",
              "content": "={{ $node['Search Webhook'].json.query }}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 500
        }
      },
      "id": "openai-response",
      "name": "Generate Response",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1050, 200]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "answer",
              "value": "={{ $json.choices[0].message.content }}"
            },
            {
              "name": "sources",
              "value": "={{ $node['Semantic Search'].json.results.map(r => r.metadata.sourceId).join(', ') }}"
            },
            {
              "name": "confidence",
              "value": "={{ $node['Semantic Search'].json.results[0].score }}"
            }
          ]
        },
        "options": {}
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [1250, 200]
    }
  ],
  "connections": {
    "Web Scrape Enhanced": {
      "main": [
        [
          {
            "node": "Semantic Upsert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Document Processor": {
      "main": [
        [
          {
            "node": "Semantic Upsert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Webhook": {
      "main": [
        [
          {
            "node": "Semantic Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Semantic Search": {
      "main": [
        [
          {
            "node": "Generate Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Response": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "tags": [
    {
      "name": "RAG",
      "id": "1"
    },
    {
      "name": "Alice Semantic Bridge",
      "id": "2"
    }
  ]
}
