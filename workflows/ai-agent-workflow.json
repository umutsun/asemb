{
  "name": "ASB-AI-Agent",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "asb-ai-agent",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "webhook_trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "model": "gpt-4-turbo-preview",
        "options": {
          "temperature": 0.7,
          "maxTokens": 2000
        }
      },
      "id": "openai_model",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [450, 200]
    },
    {
      "parameters": {
        "prompt": "You are an intelligent AI assistant for the Alice Semantic Bridge system. You help with semantic search, document analysis, and data processing.\n\nUser Query: {{ $json.query }}\nContext: {{ $json.context }}\n\nUse the available tools to provide a comprehensive response.",
        "options": {
          "systemMessage": "You are ASB AI Agent. Be helpful, accurate, and efficient."
        }
      },
      "id": "ai_agent",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "name": "Semantic Search",
        "description": "Search documents using pgvector similarity",
        "workflowId": "asb-search-workflow"
      },
      "id": "search_tool",
      "name": "Search Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1,
      "position": [450, 400]
    },
    {
      "parameters": {},
      "id": "calculator_tool",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [450, 500]
    },
    {
      "parameters": {
        "name": "Data Processor",
        "description": "Process and transform data",
        "language": "javaScript",
        "code": "// Process input data\nconst input = $input.all()[0].json;\n\n// Data processing logic\nconst processedData = {\n  timestamp: new Date().toISOString(),\n  processed: true,\n  itemCount: Array.isArray(input) ? input.length : 1,\n  summary: generateSummary(input)\n};\n\nfunction generateSummary(data) {\n  if (typeof data === 'string') return data.substring(0, 100);\n  if (Array.isArray(data)) return `Array with ${data.length} items`;\n  if (typeof data === 'object') return `Object with ${Object.keys(data).length} properties`;\n  return String(data);\n}\n\nreturn processedData;"
      },
      "id": "code_tool",
      "name": "Code Tool",
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1,
      "position": [450, 600]
    },
    {
      "parameters": {
        "name": "External API",
        "description": "Make HTTP requests to external services",
        "method": "GET",
        "url": "={{ $json.url }}",
        "authentication": "none"
      },
      "id": "http_tool",
      "name": "HTTP Request Tool",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [450, 700]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "success"
            }
          ]
        },
        "options": {}
      },
      "id": "format_response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [850, 300]
    }
  ],
  "connections": {
    "webhook_trigger": {
      "main": [
        [
          {
            "node": "ai_agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "openai_model": {
      "ai_languageModel": [
        [
          {
            "node": "ai_agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "search_tool": {
      "ai_tool": [
        [
          {
            "node": "ai_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calculator_tool": {
      "ai_tool": [
        [
          {
            "node": "ai_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "code_tool": {
      "ai_tool": [
        [
          {
            "node": "ai_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "http_tool": {
      "ai_tool": [
        [
          {
            "node": "ai_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ai_agent": {
      "main": [
        [
          {
            "node": "format_response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveDataSuccessExecution": "all",
    "saveDataErrorExecution": "all",
    "executionTimeout": 300
  }
}