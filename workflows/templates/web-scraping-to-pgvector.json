{
  "name": "Web Scraping to PgVector",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "scrape-and-store",
        "options": {}
      },
      "id": "webhook_trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [250, 300],
      "webhookId": "scrape-to-pgvector"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "extractMetadata": true,
        "cleanContent": true,
        "extractStructuredData": true
      },
      "id": "web_scrape",
      "name": "Web Scraper",
      "type": "webScrapeEnhanced",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "text": "={{ $json.content }}",
        "chunkSize": "={{ $json.chunkSize || 1000 }}",
        "chunkOverlap": "={{ $json.chunkOverlap || 200 }}"
      },
      "id": "text_chunker",
      "name": "Text Chunker",
      "type": "textChunk",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "operation": "embedStore",
        "text": "={{ $json.text }}",
        "documentId": "={{ $json.id || $now.toISOString() }}",
        "metadata": "={{ JSON.stringify({ url: $node['webhook_trigger'].json.url, title: $node['web_scrape'].json.title, chunk_index: $json.chunk_index }) }}"
      },
      "id": "alice_embed",
      "name": "Generate Embeddings",
      "type": "aliceSemanticBridgeEnhanced",
      "typeVersion": 1,
      "position": [850, 300],
      "credentials": {
        "aliceSemanticBridgeApi": {
          "id": "1",
          "name": "Alice API"
        }
      }
    },
    {
      "parameters": {
        "documents": "={{ $json }}",
        "collection": "web_content",
        "upsertMode": "replace"
      },
      "id": "pgvector_store",
      "name": "Store in PgVector",
      "type": "pgvectorUpsert",
      "typeVersion": 1,
      "position": [1050, 300],
      "credentials": {
        "pgvectorApi": {
          "id": "1",
          "name": "PgVector DB"
        }
      }
    },
    {
      "parameters": {
        "channel": "scraping:complete",
        "message": "={{ JSON.stringify({ url: $node['webhook_trigger'].json.url, chunks: $json.length, timestamp: $now }) }}"
      },
      "id": "redis_notify",
      "name": "Redis Notification",
      "type": "redisPublish",
      "typeVersion": 1,
      "position": [1250, 300],
      "credentials": {
        "redisApi": {
          "id": "1",
          "name": "Redis Cache"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "success"
            },
            {
              "name": "message",
              "value": "Web content scraped and stored successfully"
            },
            {
              "name": "url",
              "value": "={{ $node['webhook_trigger'].json.url }}"
            },
            {
              "name": "chunks_stored",
              "value": "={{ $node['pgvector_store'].json.length }}"
            }
          ]
        },
        "options": {}
      },
      "id": "set_response",
      "name": "Set Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [1450, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Web Scraper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Web Scraper": {
      "main": [
        [
          {
            "node": "Text Chunker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Chunker": {
      "main": [
        [
          {
            "node": "Generate Embeddings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Embeddings": {
      "main": [
        [
          {
            "node": "Store in PgVector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store in PgVector": {
      "main": [
        [
          {
            "node": "Redis Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Notification": {
      "main": [
        [
          {
            "node": "Set Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "errorWorkflow": "error-handler"
  },
  "tags": ["template", "web-scraping", "pgvector", "semantic-search"],
  "pinData": {},
  "versionId": "1.0.0"
}